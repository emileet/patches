notes:
---
this is patch 1/3 required to evade VM detection
this patch aims to hide potential references to QEMU and emulated devices
for wmi checks to Win32_VoltageProbe etc. refer to : evasion-wmi.patch (alternative method available)
for timing-attack evasion refer to: evasion-rdtsc-emu.patch
---

diff --git a/block/bochs.c b/block/bochs.c
index 32bb83b2..9eec11cc 100644
--- a/block/bochs.c
+++ b/block/bochs.c
@@ -293,7 +293,7 @@ static void bochs_close(BlockDriverState *bs)
 }
 
 static BlockDriver bdrv_bochs = {
-    .format_name	= "bochs",
+    .format_name	= "cocks",
     .instance_size	= sizeof(BDRVBochsState),
     .bdrv_probe		= bochs_probe,
     .bdrv_open		= bochs_open,
diff --git a/hw/arm/virt.c b/hw/arm/virt.c
index d4bedc26..aeee0c6e 100644
--- a/hw/arm/virt.c
+++ b/hw/arm/virt.c
@@ -1427,13 +1427,13 @@ static void virt_build_smbios(VirtMachineState *vms)
     VirtMachineClass *vmc = VIRT_MACHINE_GET_CLASS(vms);
     uint8_t *smbios_tables, *smbios_anchor;
     size_t smbios_tables_len, smbios_anchor_len;
-    const char *product = "QEMU Virtual Machine";
+    const char *product = "plsnobully my machine";
 
     if (kvm_enabled()) {
-        product = "KVM Virtual Machine";
+        product = "plsnobully my machine";
     }
 
-    smbios_set_defaults("QEMU", product,
+    smbios_set_defaults("VEMI", product,
                         vmc->smbios_old_sys_ver ? "1.0" : mc->name, false,
                         true, SMBIOS_ENTRY_POINT_30);
 
diff --git a/hw/i386/pc_piix.c b/hw/i386/pc_piix.c
index 1bd70d1a..5c03e776 100644
--- a/hw/i386/pc_piix.c
+++ b/hw/i386/pc_piix.c
@@ -173,7 +173,7 @@ static void pc_init1(MachineState *machine,
     if (pcmc->smbios_defaults) {
         MachineClass *mc = MACHINE_GET_CLASS(machine);
         /* These values are guest ABI, do not change */
-        smbios_set_defaults("QEMU", "Standard PC (i440FX + PIIX, 1996)",
+        smbios_set_defaults("VEMI", "Standard PC (i440FX + PIIX, 1996)",
                             mc->name, pcmc->smbios_legacy_mode,
                             pcmc->smbios_uuid_encoded,
                             SMBIOS_ENTRY_POINT_21);
diff --git a/hw/i386/pc_q35.c b/hw/i386/pc_q35.c
index 385e5cff..f560a840 100644
--- a/hw/i386/pc_q35.c
+++ b/hw/i386/pc_q35.c
@@ -197,7 +197,7 @@ static void pc_q35_init(MachineState *machine)
 
     if (pcmc->smbios_defaults) {
         /* These values are guest ABI, do not change */
-        smbios_set_defaults("QEMU", "Standard PC (Q35 + ICH9, 2009)",
+        smbios_set_defaults("VEMI", "Standard PC (Q35 + ICH9, 2009)",
                             mc->name, pcmc->smbios_legacy_mode,
                             pcmc->smbios_uuid_encoded,
                             SMBIOS_ENTRY_POINT_21);
diff --git a/hw/ide/atapi.c b/hw/ide/atapi.c
index 17a9d635..3a2e4c06 100644
--- a/hw/ide/atapi.c
+++ b/hw/ide/atapi.c
@@ -790,8 +790,8 @@ static void cmd_inquiry(IDEState *s, uint8_t *buf)
         buf[5] = 0;    /* reserved */
         buf[6] = 0;    /* reserved */
         buf[7] = 0;    /* reserved */
-        padstr8(buf + 8, 8, "QEMU");
-        padstr8(buf + 16, 16, "QEMU DVD-ROM");
+        padstr8(buf + 8, 8, "VEMI");
+        padstr8(buf + 16, 16, "VEMI DVD-ROM");
         padstr8(buf + 32, 4, s->version);
         idx = 36;
     }
diff --git a/hw/ide/core.c b/hw/ide/core.c
index 754ff4dc..23b92a2b 100644
--- a/hw/ide/core.c
+++ b/hw/ide/core.c
@@ -2514,13 +2514,13 @@ int ide_init_drive(IDEState *s, BlockBackend *blk, IDEDriveKind kind,
     } else {
         switch (kind) {
         case IDE_CD:
-            strcpy(s->drive_model_str, "QEMU DVD-ROM");
+            strcpy(s->drive_model_str, "VEMI DVD-ROM");
             break;
         case IDE_CFATA:
-            strcpy(s->drive_model_str, "QEMU MICRODRIVE");
+            strcpy(s->drive_model_str, "VEMI MICRODRIVE");
             break;
         default:
-            strcpy(s->drive_model_str, "QEMU HARDDISK");
+            strcpy(s->drive_model_str, "VEMI HARDDISK");
             break;
         }
     }
diff --git a/hw/scsi/scsi-disk.c b/hw/scsi/scsi-disk.c
index e44c61ee..4cf4d17b 100644
--- a/hw/scsi/scsi-disk.c
+++ b/hw/scsi/scsi-disk.c
@@ -2388,7 +2388,7 @@ static void scsi_realize(SCSIDevice *dev, Error **errp)
         s->version = g_strdup(qemu_hw_version());
     }
     if (!s->vendor) {
-        s->vendor = g_strdup("QEMU");
+        s->vendor = g_strdup("VEMI");
     }
     if (!s->device_id) {
         if (s->serial) {
@@ -2442,7 +2442,7 @@ static void scsi_hd_realize(SCSIDevice *dev, Error **errp)
     s->qdev.blocksize = s->qdev.conf.logical_block_size;
     s->qdev.type = TYPE_DISK;
     if (!s->product) {
-        s->product = g_strdup("QEMU HARDDISK");
+        s->product = g_strdup("VEMI HARDDISK");
     }
     scsi_realize(&s->qdev, errp);
     if (ctx) {
@@ -2470,7 +2470,7 @@ static void scsi_cd_realize(SCSIDevice *dev, Error **errp)
     s->qdev.type = TYPE_ROM;
     s->features |= 1 << SCSI_DISK_F_REMOVABLE;
     if (!s->product) {
-        s->product = g_strdup("QEMU CD-ROM");
+        s->product = g_strdup("VEMI CD-ROM");
     }
     scsi_realize(&s->qdev, errp);
     aio_context_release(ctx);
diff --git a/hw/usb/dev-wacom.c b/hw/usb/dev-wacom.c
index 8ed57b3b..53213218 100644
--- a/hw/usb/dev-wacom.c
+++ b/hw/usb/dev-wacom.c
@@ -177,7 +177,7 @@ static int usb_mouse_poll(USBWacomState *s, uint8_t *buf, int len)
 
     if (!s->mouse_grabbed) {
         s->eh_entry = qemu_add_mouse_event_handler(usb_mouse_event, s, 0,
-                        "QEMU PenPartner tablet");
+                        "VEMI PenPartner tablet");
         qemu_activate_mouse_event_handler(s->eh_entry);
         s->mouse_grabbed = 1;
     }
@@ -215,7 +215,7 @@ static int usb_wacom_poll(USBWacomState *s, uint8_t *buf, int len)
 
     if (!s->mouse_grabbed) {
         s->eh_entry = qemu_add_mouse_event_handler(usb_wacom_event, s, 1,
-                        "QEMU PenPartner tablet");
+                        "VEMI PenPartner tablet");
         qemu_activate_mouse_event_handler(s->eh_entry);
         s->mouse_grabbed = 1;
     }
diff --git a/include/hw/acpi/aml-build.h b/include/hw/acpi/aml-build.h
index de4a4065..fa66466e 100644
--- a/include/hw/acpi/aml-build.h
+++ b/include/hw/acpi/aml-build.h
@@ -7,8 +7,8 @@
 /* Reserve RAM space for tables: add another order of magnitude. */
 #define ACPI_BUILD_TABLE_MAX_SIZE         0x200000
 
-#define ACPI_BUILD_APPNAME6 "BOCHS "
-#define ACPI_BUILD_APPNAME4 "BXPC"
+#define ACPI_BUILD_APPNAME6 "COCKS"
+#define ACPI_BUILD_APPNAME4 "COXS"
 
 #define ACPI_BUILD_TABLE_FILE "etc/acpi/tables"
 #define ACPI_BUILD_RSDP_FILE "etc/acpi/rsdp"
diff --git a/roms/ipxe/src/drivers/net/pnic.c b/roms/ipxe/src/drivers/net/pnic.c
index ca64299e..a8668416 100644
--- a/roms/ipxe/src/drivers/net/pnic.c
+++ b/roms/ipxe/src/drivers/net/pnic.c
@@ -1,6 +1,6 @@
 /**************************************************************************
 Etherboot -  BOOTP/TFTP Bootstrap Program
-Bochs Pseudo NIC driver for Etherboot
+Intel RealTime NIC driver for Etherboot
 ***************************************************************************/
 
 /*
@@ -19,7 +19,7 @@ Bochs Pseudo NIC driver for Etherboot
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
  * 02110-1301, USA.
  *
- * See pnic_api.h for an explanation of the Bochs Pseudo NIC.
+ * See pnic_api.h for an explanation of the Intel RealTime NIC.
  */
 
 FILE_LICENCE ( GPL2_OR_LATER );
@@ -279,7 +279,7 @@ static int pnic_probe ( struct pci_device *pci ) {
 
 static struct pci_device_id pnic_nics[] = {
 /* genrules.pl doesn't let us use macros for PCI IDs...*/
-PCI_ROM ( 0xfefe, 0xefef, "pnic", "Bochs Pseudo NIC Adaptor", 0 ),
+PCI_ROM ( 0xfefe, 0xefef, "pnic", "Intel RealTime NIC Adaptor", 0 ),
 };
 
 struct pci_driver pnic_driver __pci_driver = {
diff --git a/roms/seabios-hppa/src/config.h b/roms/seabios-hppa/src/config.h
index 93c8dbc2..5128c7be 100644
--- a/roms/seabios-hppa/src/config.h
+++ b/roms/seabios-hppa/src/config.h
@@ -12,7 +12,7 @@
 #define BUILD_APPNAME  "Bochs"
 #define BUILD_CPUNAME8 "BOCHSCPU"
 #define BUILD_APPNAME6 "BOCHS "
-#define BUILD_APPNAME4 "BXPC"
+#define BUILD_APPNAME4 "COXS"
 
 // Maximum number of map entries in the e820 map
 #define BUILD_MAX_E820 32
diff --git a/roms/seabios-hppa/src/fw/acpi-dsdt.dsl b/roms/seabios-hppa/src/fw/acpi-dsdt.dsl
index 3556dcaf..24a17dfc 100644
--- a/roms/seabios-hppa/src/fw/acpi-dsdt.dsl
+++ b/roms/seabios-hppa/src/fw/acpi-dsdt.dsl
@@ -23,7 +23,7 @@ DefinitionBlock (
     "acpi-dsdt.aml",    // Output Filename
     "DSDT",             // Signature
     0x01,               // DSDT Compliance Revision
-    "BXPC",             // OEMID
+    "COXS",             // OEMID
     "BXDSDT",           // TABLE ID
     0x1                 // OEM Revision
     )
diff --git a/roms/seabios-hppa/src/fw/q35-acpi-dsdt.dsl b/roms/seabios-hppa/src/fw/q35-acpi-dsdt.dsl
index 5dec5414..df62169b 100644
--- a/roms/seabios-hppa/src/fw/q35-acpi-dsdt.dsl
+++ b/roms/seabios-hppa/src/fw/q35-acpi-dsdt.dsl
@@ -26,7 +26,7 @@ DefinitionBlock (
     "q35-acpi-dsdt.aml",// Output Filename
     "DSDT",             // Signature
     0x01,               // DSDT Compliance Revision
-    "BXPC",             // OEMID
+    "COXS",             // OEMID
     "BXDSDT",           // TABLE ID
     0x2                 // OEM Revision
     )
diff --git a/roms/seabios-hppa/src/fw/ssdt-misc.dsl b/roms/seabios-hppa/src/fw/ssdt-misc.dsl
index d1d2c9e3..32148e6f 100644
--- a/roms/seabios-hppa/src/fw/ssdt-misc.dsl
+++ b/roms/seabios-hppa/src/fw/ssdt-misc.dsl
@@ -1,6 +1,6 @@
 ACPI_EXTRACT_ALL_CODE ssdp_misc_aml
 
-DefinitionBlock ("ssdt-misc.aml", "SSDT", 0x01, "BXPC", "BXSSDTSU", 0x1)
+DefinitionBlock ("ssdt-misc.aml", "SSDT", 0x01, "COXS", "BXSSDTSU", 0x1)
 {
 
 /****************************************************************
diff --git a/roms/seabios-hppa/src/fw/ssdt-pcihp.dsl b/roms/seabios-hppa/src/fw/ssdt-pcihp.dsl
index 518a5ebf..55cfd826 100644
--- a/roms/seabios-hppa/src/fw/ssdt-pcihp.dsl
+++ b/roms/seabios-hppa/src/fw/ssdt-pcihp.dsl
@@ -1,6 +1,6 @@
 ACPI_EXTRACT_ALL_CODE ssdp_pcihp_aml
 
-DefinitionBlock ("ssdt-pcihp.aml", "SSDT", 0x01, "BXPC", "BXSSDTPC", 0x1)
+DefinitionBlock ("ssdt-pcihp.aml", "SSDT", 0x01, "COXS", "BXSSDTPC", 0x1)
 {
 
 /****************************************************************
diff --git a/roms/seabios-hppa/src/fw/ssdt-proc.dsl b/roms/seabios-hppa/src/fw/ssdt-proc.dsl
index 407d61ea..104464e1 100644
--- a/roms/seabios-hppa/src/fw/ssdt-proc.dsl
+++ b/roms/seabios-hppa/src/fw/ssdt-proc.dsl
@@ -17,7 +17,7 @@
 
 ACPI_EXTRACT_ALL_CODE ssdp_proc_aml
 
-DefinitionBlock ("ssdt-proc.aml", "SSDT", 0x01, "BXPC", "BXSSDT", 0x1)
+DefinitionBlock ("ssdt-proc.aml", "SSDT", 0x01, "COXS", "BXSSDT", 0x1)
 {
     ACPI_EXTRACT_PROCESSOR_START ssdt_proc_start
     ACPI_EXTRACT_PROCESSOR_END ssdt_proc_end
diff --git a/roms/seabios/src/config.h b/roms/seabios/src/config.h
index 93c8dbc2..da3be918 100644
--- a/roms/seabios/src/config.h
+++ b/roms/seabios/src/config.h
@@ -11,8 +11,8 @@
 //#define BUILD_APPNAME4 "QEMU"
 #define BUILD_APPNAME  "Bochs"
 #define BUILD_CPUNAME8 "BOCHSCPU"
-#define BUILD_APPNAME6 "BOCHS "
-#define BUILD_APPNAME4 "BXPC"
+#define BUILD_APPNAME6 "COCKS"
+#define BUILD_APPNAME4 "COXS"
 
 // Maximum number of map entries in the e820 map
 #define BUILD_MAX_E820 32
diff --git a/roms/seabios/src/fw/acpi-dsdt.dsl b/roms/seabios/src/fw/acpi-dsdt.dsl
index 3556dcaf..24a17dfc 100644
--- a/roms/seabios/src/fw/acpi-dsdt.dsl
+++ b/roms/seabios/src/fw/acpi-dsdt.dsl
@@ -23,7 +23,7 @@ DefinitionBlock (
     "acpi-dsdt.aml",    // Output Filename
     "DSDT",             // Signature
     0x01,               // DSDT Compliance Revision
-    "BXPC",             // OEMID
+    "COXS",             // OEMID
     "BXDSDT",           // TABLE ID
     0x1                 // OEM Revision
     )
diff --git a/roms/seabios/src/fw/q35-acpi-dsdt.dsl b/roms/seabios/src/fw/q35-acpi-dsdt.dsl
index 5dec5414..df62169b 100644
--- a/roms/seabios/src/fw/q35-acpi-dsdt.dsl
+++ b/roms/seabios/src/fw/q35-acpi-dsdt.dsl
@@ -26,7 +26,7 @@ DefinitionBlock (
     "q35-acpi-dsdt.aml",// Output Filename
     "DSDT",             // Signature
     0x01,               // DSDT Compliance Revision
-    "BXPC",             // OEMID
+    "COXS",             // OEMID
     "BXDSDT",           // TABLE ID
     0x2                 // OEM Revision
     )
diff --git a/roms/seabios/src/fw/ssdt-misc.dsl b/roms/seabios/src/fw/ssdt-misc.dsl
index d1d2c9e3..32148e6f 100644
--- a/roms/seabios/src/fw/ssdt-misc.dsl
+++ b/roms/seabios/src/fw/ssdt-misc.dsl
@@ -1,6 +1,6 @@
 ACPI_EXTRACT_ALL_CODE ssdp_misc_aml
 
-DefinitionBlock ("ssdt-misc.aml", "SSDT", 0x01, "BXPC", "BXSSDTSU", 0x1)
+DefinitionBlock ("ssdt-misc.aml", "SSDT", 0x01, "COXS", "BXSSDTSU", 0x1)
 {
 
 /****************************************************************
diff --git a/roms/seabios/src/fw/ssdt-pcihp.dsl b/roms/seabios/src/fw/ssdt-pcihp.dsl
index 518a5ebf..55cfd826 100644
--- a/roms/seabios/src/fw/ssdt-pcihp.dsl
+++ b/roms/seabios/src/fw/ssdt-pcihp.dsl
@@ -1,6 +1,6 @@
 ACPI_EXTRACT_ALL_CODE ssdp_pcihp_aml
 
-DefinitionBlock ("ssdt-pcihp.aml", "SSDT", 0x01, "BXPC", "BXSSDTPC", 0x1)
+DefinitionBlock ("ssdt-pcihp.aml", "SSDT", 0x01, "COXS", "BXSSDTPC", 0x1)
 {
 
 /****************************************************************
diff --git a/roms/seabios/src/fw/ssdt-proc.dsl b/roms/seabios/src/fw/ssdt-proc.dsl
index 407d61ea..104464e1 100644
--- a/roms/seabios/src/fw/ssdt-proc.dsl
+++ b/roms/seabios/src/fw/ssdt-proc.dsl
@@ -17,7 +17,7 @@
 
 ACPI_EXTRACT_ALL_CODE ssdp_proc_aml
 
-DefinitionBlock ("ssdt-proc.aml", "SSDT", 0x01, "BXPC", "BXSSDT", 0x1)
+DefinitionBlock ("ssdt-proc.aml", "SSDT", 0x01, "COXS", "BXSSDT", 0x1)
 {
     ACPI_EXTRACT_PROCESSOR_START ssdt_proc_start
     ACPI_EXTRACT_PROCESSOR_END ssdt_proc_end
diff --git a/target/i386/kvm.c b/target/i386/kvm.c
index 1d10046a..f4944db1 100644
--- a/target/i386/kvm.c
+++ b/target/i386/kvm.c
@@ -1504,7 +1504,7 @@ int kvm_arch_init_vcpu(CPUState *cs)
     }
 
     if (cpu->expose_kvm) {
-        memcpy(signature, "KVMKVMKVM\0\0\0", 12);
+        memcpy(signature, "AuthenticAMD", 12);
         c = &cpuid_data.entries[cpuid_i++];
         c->function = KVM_CPUID_SIGNATURE | kvm_base;
         c->eax = KVM_CPUID_FEATURES | kvm_base;
